"""
Django settings for P2PLending project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import json
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2bu($ho77!4(lp0=^m1d42fl_ks+xpn224joj@sz0emhfkwczm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'registration',
    'rest_framework',
    'P2PLending.users',
    'P2PLending.lending',
    'P2PLending.partnership',
    'P2PLending.money',
    'P2PLending.paypal',
    'P2PLending.reviews',
    'djmoney',
    'widget_tweaks',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'P2PLending.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "P2PLending", "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'P2PLending.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Europe/Minsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATICFILES_DIRS = [os.path.join(BASE_DIR, "P2PLending", "static"), ]
STATIC_URL = '/static/'

CONFIG_ROOT = BASE_DIR

with open(os.path.join(CONFIG_ROOT, "env.json")) as env_file:
    ENV_TOKENS = json.load(env_file)

REGISTRATION_OPEN = True  # If True, users can register
ACCOUNT_ACTIVATION_DAYS = 7  # One-week activation window; you may, of course, use a different value.
REGISTRATION_AUTO_LOGIN = True  # If True, the user will be automatically logged in.
LOGIN_REDIRECT_URL = '/'  # The page you want users to arrive at after they successful log in
LOGIN_URL = '/accounts/login/'  # The page users are directed to if they are not logged in,
# and are trying to access pages requiring authentication
INCLUDE_REGISTER_URL = False

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

AUTH_USER_MODEL = 'users.User'

CURRENCIES = ("BYN",)
DEFAULT_CURRENCY = "BYN"

MIN_CREDIT_TERM = 1
MAX_CREDIT_TERM = 14
MIN_CREDIT_AMOUNT = 50  #BYN currency
MAX_CREDIT_AMOUNT = 1000    #BYN currency
DEFAULT_CREDIT_TERMS = [('P{}D'.format(i), '{} days'.format(i) if i > 1 else '{} day'.format(i)) for i in
                        range(MIN_CREDIT_TERM, MAX_CREDIT_TERM + 1)]
LATE_FEE_RATE = 0.1
# add settings for amount, rate

# paypal credentials
PAYPAL_MODE = "sandbox"
PAYPAL_ID = ENV_TOKENS.get('PAYPAL_ID', None)
PAYPAL_SECRET = ENV_TOKENS.get('PAYPAL_SECRET', None)
